// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderer should render preview 1`] = `
<div
  className="root"
>
  <div
    className="previewContainer pizza"
    data-preview="name"
    title="salami"
  >
    <previewContainer>
      <div
        className="preview"
      >
        <div>
          preview
        </div>
      </div>
    </previewContainer>
  </div>
  <div
    className="controls"
  >
    <div>
      <div>
        tab buttons
      </div>
    </div>
    <div
      className="toolbar"
    >
      <div>
        toolbar
      </div>
    </div>
  </div>
  <div>
    <div>
      tab body
    </div>
  </div>
</div>
`;

exports[`should render component renderer 1`] = `
<Styled(Playground)
  code="<button>OK</button>"
  name="name"
  preview={
    <Preview
      code="<button>OK</button>"
      evalInContext={[Function]}
    />
  }
  previewContainer={[Function]}
  previewProps={Object {}}
  tabBody={
    <Slot
      active={undefined}
      name="playgroundTab"
      onlyActive={true}
      props={
        Object {
          "code": "<button>OK</button>",
          "example": 0,
          "isolated": false,
          "name": "name",
          "onChange": [Function],
          "setState": [Function],
          "state": Object {
            "activeTab": undefined,
            "code": "<button>OK</button>",
          },
        }
      }
    />
  }
  tabButtons={
    <Slot
      active={undefined}
      name="playgroundTabButton"
      props={
        Object {
          "code": "<button>OK</button>",
          "example": 0,
          "isolated": false,
          "name": "name",
          "onClick": [Function],
          "setState": [Function],
          "state": Object {
            "activeTab": undefined,
            "code": "<button>OK</button>",
          },
        }
      }
    />
  }
  toolbar={
    <Slot
      name="playgroundToolbarButton"
      props={
        Object {
          "code": "<button>OK</button>",
          "example": 0,
          "isolated": false,
          "name": "name",
          "setState": [Function],
          "state": Object {
            "activeTab": undefined,
            "code": "<button>OK</button>",
          },
        }
      }
    />
  }
/>
`;
